  @startuml

skinparam classAttributeIconSize 0
skinparam linetype polyline

class TetrisGameClient {
    + TetrisGameClient()
    + logIn(UserName : String, Password : String)
    + signUp(UserName : String, Password : String)
    + play()
    + logOut()
    + showMenu()  
}

class Player{
    - topScore : int
    + Player(UserName : String)
    + createGame()
    + addGameInfo(info : String)
    + getPlayerInfo()
    + play()
}

class Game {
    - score : int
    + Game()
    + drawBoard()
    + playGame()
    + stopGame()
    + createNewActivePiece()
    + endGame() : int

}

abstract class Observable
class Controls extends Observable

class Board implements Observer {
    + createPiece() : Piece
    + deletePiece()
    + Update(controlKey)
    + Board()
    - boardMatrix : vector<vector<color>>
    + isOcupped(row : int, col : int) : boolean


}
abstract class Piece {
    + Piece()
    - Positions : int[4][2]
    + colMove(nCols : int)
    + rowMove(nRows : int)
    + Color
    + rotateRight() : boolean
    + rotateLeft() : boolean
    + goDown()
    + moveRight() : boolean
    + moveLeft() : boolean
}

class Interface {
    + Interface()
}

Interface Observer {
    + Update()
}
class OrangeRicky extends Piece
class BlueRicky extends Piece
class ClevelandZ extends Piece
class RhodeIslandZ extends Piece
class Hero extends Piece
class Teewee extends Piece
class Smashboy extends Piece

Observable -right-> "*" Observer
TetrisGameClient -right-> "0..1" Player
TetrisGameClient <-down-> "0..1" Game
Game -left-> "1" Board
Board -down-> "0*"Piece
Game -right-> "1" Interface

@enduml